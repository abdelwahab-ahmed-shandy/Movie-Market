@model DAL.ViewModels.User.ForgetPasswordVM

@{
    ViewData["Title"] = "Forgot Password";
}

<div class="row justify-content-center align-items-center min-vh-100 py-5">
    <div class="col-lg-5 col-md-8">
        <div class="auth-card shadow-lg rounded-4 overflow-hidden border-0">
            <div class="auth-header text-center p-4 bg-gradient-primary">
                <div class="logo-container mb-3">
                    <img src="~/Assets/Customer/imag/favicon.png" alt="MovieMart Logo" width="80" height="80"
                         class="img-fluid animate__animated animate__bounceIn">
                </div>
                <h2 class="fw-bold text-white mb-2 animate__animated animate__fadeInDown">Forgot Password</h2>
                <p class="text-light opacity-75 mb-0 animate__animated animate__fadeIn animate__delay-1s">
                    Enter your email to reset your password
                </p>
            </div>

            <div class="auth-body p-4 p-md-5">
                <form asp-action="ForgetPassword" method="post" class="needs-validation" novalidate>
                    @Html.AntiForgeryToken()

                    <div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible fade show">
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>

                    <!-- Email Field -->
                    <div class="form-floating mb-4 animate__animated animate__fadeIn animate__delay-1s">
                        <input asp-for="Email" type="email" class="form-control"
                               placeholder=" " required autofocus />
                        <label asp-for="Email" class="text-muted">Email Address</label>
                        <span asp-validation-for="Email" class="text-danger small d-block mt-1"></span>
                        <div class="invalid-feedback">
                            Please provide a valid email address
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="d-grid mb-4 animate__animated animate__fadeIn animate__delay-2s">
                        <button type="submit" class="btn btn-accent btn-lg py-3 fw-bold">
                            <span class="submit-text">Reset Password</span>
                            <span class="spinner-border spinner-border-sm d-none ms-2"
                                  role="status" aria-hidden="true"></span>
                        </button>
                    </div>

                    <!-- Back to Login Link -->
                    <div class="text-center animate__animated animate__fadeIn animate__delay-2s">
                        <p class="mb-0 text-muted">
                            Remember your password?
                            <a asp-action="Login" class="text-accent fw-bold text-decoration-none">
                                Sign In
                            </a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

    <style>
        .min-vh-100 {
            min-height: 100vh;
            background: linear-gradient(135deg, rgba(108, 92, 231, 0.1) 0%, rgba(162, 155, 254, 0.1) 100%);
        }

        .auth-card {
            border: none;
            background: rgba(33, 37, 41, 0.95);
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

            .auth-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            }

        .bg-gradient-primary {
            background: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%);
        }

        .btn-accent {
            background-color: #6c5ce7;
            border-color: #6c5ce7;
            color: white;
            transition: all 0.3s ease;
        }

            .btn-accent:hover {
                background-color: #5a4bd6;
                border-color: #5a4bd6;
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(108, 92, 231, 0.3);
            }

        .text-accent {
            color: #a29bfe !important;
            transition: all 0.2s ease;
        }

            .text-accent:hover {
                color: #6c5ce7 !important;
            }

        .form-control {
            background-color: rgba(255, 255, 255, 0.05);
            border-color: rgba(255, 255, 255, 0.1);
            color: white;
        }

            .form-control:focus {
                background-color: rgba(255, 255, 255, 0.1);
                border-color: #6c5ce7;
                box-shadow: 0 0 0 0.25rem rgba(108, 92, 231, 0.25);
                color: white;
            }

        .form-floating label {
            color: #6c757d;
        }

        .logo-container {
            transition: transform 0.3s ease;
        }

            .logo-container:hover {
                transform: scale(1.1);
            }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Enhanced form validation with animations
            (function() {
                'use strict';
                const form = document.querySelector('form');

                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();

                        // Add shake animation to invalid fields
                        const invalidFields = form.querySelectorAll(':invalid');
                        invalidFields.forEach(field => {
                            field.classList.add('animate__animated', 'animate__headShake');
                            setTimeout(() => {
                                field.classList.remove('animate__animated', 'animate__headShake');
                            }, 1000);
                        });
                    } else {
                        // Show loading state
                        const submitBtn = form.querySelector('button[type="submit"]');
                        submitBtn.querySelector('.submit-text').classList.add('d-none');
                        submitBtn.querySelector('.spinner-border').classList.remove('d-none');
                        submitBtn.disabled = true;

                        // Add pulse animation to button
                        submitBtn.classList.add('animate__animated', 'animate__pulse');
                    }

                    form.classList.add('was-validated');
                }, false);

                // Remove validation when user starts typing
                form.querySelectorAll('input').forEach(input => {
                    input.addEventListener('input', function() {
                        if (this.checkValidity()) {
                            this.classList.remove('is-invalid');
                        }
                    });
                });
            })();

            // Add focus effect to form elements
            $('.form-control').focus(function() {
                $(this).parent().addClass('focus');
            }).blur(function() {
                $(this).parent().removeClass('focus');
            });
        });
    </script>
}