@model DAL.ViewModels.Character.CharacterAdminVM

@{
    ViewData["Title"] = "Character Details";
}

<h1>Character Details</h1>

<div>
    <h4>Character</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@Model.Name</dd>

        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@Model.Description</dd>

        <dt class="col-sm-4">Status:</dt>
        <dd class="col-sm-8">
            <span class="badge @GetStateBadgeClass(Model.CurrentState)">
                @Model.CurrentState
            </span>
        </dd>

        <dt class="col-sm-2">Movies</dt>
        <dd class="col-sm-10">@string.Join(", ", Model.MovieTitles)</dd>

        <dt class="col-sm-2">TV Series</dt>
        <dd class="col-sm-10">@string.Join(", ", Model.TvSeriesTitles)</dd>

        <dt class="col-sm-2">Created Date</dt>
        <dd class="col-sm-10">@Model.CreatedDateUtc.ToString("g")</dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@functions {
    string GetStateBadgeClass(CurrentState state)
    {
        return state switch
        {
            CurrentState.Active => "bg-success",
            CurrentState.Inactive => "bg-secondary",
            CurrentState.SoftDelete => "bg-danger",
            CurrentState.Archived => "bg-warning",
            _ => "bg-secondary"
        };
    }

} 