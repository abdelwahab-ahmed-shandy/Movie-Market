@model DAL.ViewModels.Season.SeasonAdminDetailsVM

@{
    ViewData["Title"] = "Season Details";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@Model.Title</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
            @if (Model.IsDeleted)
            {
                <form asp-action="Restore" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-success">Restore</button>
                </form>
                <form asp-action="Delete" method="post" class="d-inline"
                      onsubmit="return confirm('Permanently delete this season?');">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger">Delete Permanently</button>
                </form>
            }
            else
            {
                <form asp-action="SoftDelete" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-secondary">Delete</button>
                </form>
            }
            <a asp-action="Index" asp-route-tvSeriesId="@Model.TvSeriesId" class="btn btn-outline-secondary">Back to List</a>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <dl class="row">
                        <dt class="col-sm-3">TV Series</dt>
                        <dd class="col-sm-9">
                            <a asp-controller="TvSeries" asp-action="Details" asp-route-id="@Model.TvSeriesId">
                                @Model.TvSeriesTitle
                            </a>
                        </dd>

                        <dt class="col-sm-3">Season Number</dt>
                        <dd class="col-sm-9">@Model.SeasonNumber</dd>

                        <dt class="col-sm-3">Release Year</dt>
                        <dd class="col-sm-9">@Model.ReleaseYear</dd>

                        <dt class="col-sm-3">Status</dt>
                        <dd class="col-sm-9">
                            <span class="badge @GetStateBadgeClass(Model.CurrentState)">
                                @Model.CurrentState
                            </span>
                        </dd>

                        <dt class="col-sm-3">Created</dt>
                        <dd class="col-sm-9">@Model.CreatedDateUtc.ToString("g") by @Model.CreatedBy</dd>

                        @if (Model.LastModifiedDateUtc.HasValue)
                        {
                            <dt class="col-sm-3">Last Modified</dt>
                            <dd class="col-sm-9">@Model.LastModifiedDateUtc.Value.ToString("g") by @Model.LastModifiedBy</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Episodes (@Model.Episodes.Count)</h4>
                <a asp-controller="Episode" asp-action="Create" asp-route-seasonId="@Model.Id" class="btn btn-sm btn-primary">
                    <i class="fas fa-plus"></i> Add Episode
                </a>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Episodes.Any())
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Episode</th>
                            <th>Title</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var episode in Model.Episodes)
                        {
                            <tr class="@(episode.IsDeleted ? "table-secondary" : "")">
                                <td>@episode.EpisodeNumber</td>
                                <td>@episode.Title</td>
                                <td>
                                    <span class="badge @(episode.IsDeleted ? "bg-danger" : "bg-success")">
                                        @(episode.IsDeleted ? "Deleted" : "Active")
                                    </span>
                                </td>
                                <td>
                                    <a asp-controller="Episode" asp-action="Details" asp-route-id="@episode.Id"
                                       class="btn btn-sm btn-info">View</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted">No episodes available</p>
            }
        </div>
    </div>
</div>

@functions {
    string GetStateBadgeClass(CurrentState state)
    {
        return state switch
        {
            CurrentState.Active => "bg-success",
            CurrentState.Inactive => "bg-secondary",
            CurrentState.SoftDelete => "bg-danger",
            CurrentState.Archived => "bg-warning",
            _ => "bg-secondary"
        };
    }
}