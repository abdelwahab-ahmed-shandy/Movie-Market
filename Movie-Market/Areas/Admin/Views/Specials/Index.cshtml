@model DAL.ViewModels.Special.SpecialAdminListVM

@{
    ViewData["Title"] = "Specials Management";
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">@ViewData["Title"]</h6>
        <a asp-action="Create" class="btn btn-primary btn-sm">Add New Special</a>
    </div>
    <div class="card-body">
        <!-- Search Box -->
        <div class="row mb-3">
            <div class="col-md-6">
                <form method="get" class="form-inline">
                    <div class="input-group">
                        <input type="text" class="form-control" name="searchTerm" value="@Model.SearchTerm" placeholder="Search Specials...">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                        @if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            <a href="@Url.Action("Index")" class="btn btn-secondary">
                                <i class="fas fa-times"></i>
                            </a>
                        }
                    </div>
                </form>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Discount</th>
                        <th>Date Range</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Specials)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.DiscountPercentage%</td>
                            <td>@item.StartDate.ToString("d") - @item.EndDate.ToString("d")</td>
                            <td>
                                <span class="badge @(item.IsActive ? "bg-success" : "bg-secondary")">
                                    @(item.IsActive ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                                    <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                                            data-bs-target="#confirmDeleteModal"
                                            data-id="@item.Id"
                                            data-name="@item.Name">
                                        Delete
                                    </button>
                                    <button onclick="toggleStatus('@item.Id')"
                                            class="btn @(item.IsActive ? "btn-warning" : "btn-success")">
                                        @(item.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="row mt-3">
            <div class="col-md-6">
                <div class="dataTables_info">
                    Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to
                    @Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount) of
                    @Model.TotalCount entries
                </div>
            </div>
            <div class="col-md-6">
                <nav class="float-end">
                    <ul class="pagination">
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, searchTerm = Model.SearchTerm })">
                                Previous
                            </a>
                        </li>

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link"
                                   href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize, searchTerm = Model.SearchTerm })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, searchTerm = Model.SearchTerm })">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Page Size Selector -->
        <div class="row mt-2">
            <div class="col-md-12">
                <div class="form-inline float-end">
                    <label class="mr-2">Items per page:</label>
                    <select class="form-select form-select-sm" onchange="window.location.href=this.value">
                        @foreach (var size in new[] { 5, 10, 20, 50 })
                        {
                            <option value="@Url.Action("Index", new { pageNumber = 1, pageSize = size, searchTerm = Model.SearchTerm })"
                                    selected="@(Model.PageSize == size)">
                                @size
                            </option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to perform this action on <strong id="specialName"></strong>?
            </div>
            <div class="modal-footer">
                <form method="post" asp-action="SoftDelete">
                    <input type="hidden" name="id" id="softDeleteSpecialId" />
                    <button type="submit" class="btn btn-warning" id="softDeleteBtn">Soft Delete</button>
                </form>
                <form method="post" asp-action="Delete">
                    <input type="hidden" name="id" id="permanentDeleteSpecialId" />
                    <button type="submit" class="btn btn-danger">Delete Permanently</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var confirmDeleteModal = document.getElementById('confirmDeleteModal');
        confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var name = button.getAttribute('data-name');

            document.getElementById('specialName').textContent = name;
            document.getElementById('softDeleteSpecialId').value = id;
            document.getElementById('permanentDeleteSpecialId').value = id;
        });

        function toggleStatus(id) {
            $.post('@Url.Action("ToggleStatus")', { id: id })
                .done(function() {
                    window.location.reload();
                })
                .fail(function() {
                    alert('Failed to update status');
                });
        }
    </script>
}