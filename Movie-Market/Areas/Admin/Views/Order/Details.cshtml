@model DAL.Models.Order

@{
    ViewData["Title"] = "Order Details";
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewData["Title"]</h1>
        <div>
            <span class="badge @GetStatusBadgeClass(Model.Status) p-2">
                @Model.Status
            </span>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Order Items</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Movie</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>@item.Movie.Title</td>
                                        <td>@item.Price.ToString("C")</td>
                                        <td>@item.Count</td>
                                        <td>@((item.Price * item.Count).ToString("C"))</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="3" class="text-right">Subtotal:</th>
                                    <th>@Model.OrderTotal.ToString("C")</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Order Information</h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6>Order Number</h6>
                        <p>@Model.Id</p>
                    </div>
                    <div class="mb-3">
                        <h6>Customer</h6>
                        <p>@Model.ApplicationUser.FirstName @Model.ApplicationUser.LastName</p>
                        <p>@Model.ApplicationUser.Email</p>
                    </div>
                    <div class="mb-3">
                        <h6>Order Date</h6>
                        <p>@Model.OrderDate.ToString("f")</p>
                    </div>
                    <div class="mb-3">
                        <h6>Payment Status</h6>
                        <p>
                            @if (Model.PaymentStatus)
                            {
                                <span class="badge bg-success">Paid</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Pending</span>
                            }
                        </p>
                    </div>
                    <div class="mb-3">
                        <h6>Shipping Status</h6>
                        <p>
                            @if (Model.OrderShipedStatus)
                            {
                                <span class="badge bg-success">Shipped</span>
                                @if (!string.IsNullOrEmpty(Model.TrackingNumber))
                                {
                                <p>Tracking: @Model.TrackingNumber</p>
                            }
                        }
                        else
                        {
                            <span class="badge bg-warning text-dark">Processing</span>
                        }
                        </p>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Order Actions</h6>
                </div>
                <div class="card-body">
                    @if (Model.Status != OrderStatus.Canceled)
                    {
                        <form asp-action="UpdateShipping" method="post">
                            <input type="hidden" name="orderId" value="@Model.Id" />
                            <div class="form-group">
                                <label>Update Status</label>
                                <select name="status" class="form-control">
                                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                    {
                                        <option value="@status" selected="@(status == Model.Status)">@status</option>
                                    }
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary btn-block mt-2">
                                <i class="fas fa-save"></i> Update Status
                            </button>
                        </form>

                        @if (Model.Status != OrderStatus.Canceled)
                        {
                            <form asp-action="CancelOrder" method="post" class="mt-3">
                                <input type="hidden" name="orderId" value="@Model.Id" />
                                <button type="submit" class="btn btn-danger btn-block"
                                        onclick="return confirm('Are you sure you want to cancel this order?')">
                                    <i class="fas fa-times"></i> Cancel Order
                                </button>
                            </form>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            This order has been canceled and cannot be modified.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning text-dark",
            OrderStatus.Completed => "bg-success",
            OrderStatus.Canceled => "bg-danger",
            OrderStatus.Shipped => "bg-primary",
            _ => "bg-secondary"
        };
    }
}