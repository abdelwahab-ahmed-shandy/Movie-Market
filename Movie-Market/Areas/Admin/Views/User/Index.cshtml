@using BLL.Utilities
@using DAL.ViewModels.User
@model PaginatedList<DAL.ViewModels.User.UserIndexVM>
@{
    ViewData["Title"] = ViewData["Title"] ?? "Users Management";
    var userType = ViewData["UserType"]?.ToString() ?? "Users";
    var searchTerm = ViewData["Search"]?.ToString();
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-column flex-md-row justify-content-between align-items-center bg-primary text-white">
        <h6 class="m-0 font-weight-bold">@userType Management</h6>
        <div class="mt-2 mt-md-0">
            <div class="btn-group" role="group">
                <a asp-action="Admins" class="btn btn-outline-light @(userType == "Admins" ? "active" : "")">Admins</a>
                <a asp-action="SuperAdmins" class="btn btn-outline-light @(userType == "Super Admins" ? "active" : "")">Super Admins</a>
                <a asp-action="Customers" class="btn btn-outline-light @(userType == "Customers" ? "active" : "")">Customers</a>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <form method="get" class="form-inline">
                    <div class="input-group">
                        <input type="text" name="search" class="form-control border-primary" placeholder="Search by name or email"
                               value="@searchTerm" />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Search
                            </button>
                            @if (!string.IsNullOrEmpty(searchTerm))
                            {
                                <a asp-action="@ViewContext.RouteData.Values["Action"]" class="btn btn-outline-secondary">
                                    <i class="fas fa-times"></i> Clear
                                </a>
                            }
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-6 text-md-right mt-2 mt-md-0">
                <span class="badge badge-primary p-2">Total @userType.ToLower(): @Model.TotalCount</span>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" width="100%" cellspacing="0">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            <a asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-sortOrder="@ViewData["NameSortParam"]"
                               asp-route-search="@searchTerm"
                               class="text-white">
                                Name
                                @if (ViewData["CurrentSort"]?.ToString() == "name_desc")
                                {
                                    <i class="fas fa-sort-down ml-1"></i>
                                }
                                else
                                {
                                    <i class="fas fa-sort-up ml-1"></i>
                                }
                            </a>
                        </th>
                        <th class="text-white">Email</th>
                        <th class="text-white">Type</th>
                        <th class="text-white">Status</th>
                        <th>
                            <a asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-sortOrder="@ViewData["DateSortParam"]"
                               asp-route-search="@searchTerm"
                               class="text-white">
                                Registered
                                @if (ViewData["CurrentSort"]?.ToString() == "date_desc")
                                {
                                    <i class="fas fa-sort-down ml-1"></i>
                                }
                                else
                                {
                                    <i class="fas fa-sort-up ml-1"></i>
                                }
                            </a>
                        </th>
                        <th class="text-white">Last Login</th>
                        <th class="text-center text-white">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Any())
                    {
                        @foreach (var user in Model)
                        {
                            <tr class="hover-effect">
                                <td>@user.FullName</td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge badge-pill @(user.UserType == "Admin" ? "bg-warning" : user.UserType == "Super Admin" ? "bg-danger" : "bg-info")">
                                        @user.UserType
                                    </span>
                                </td>
                                <td>
                                    <span class="badge badge-pill @(user.AccountStatus == "Active" ? "bg-success" : "bg-secondary")">
                                        @user.AccountStatus
                                    </span>
                                </td>
                                <td>@user.RegistrationDate.ToString("d")</td>
                                <td>@(user.LastLogin?.ToString("g") ?? "Never")</td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@user.Id"
                                           class="btn btn-info" title="Details">
                                            <i class="fas fa-eye"></i>
                                        </a>

                                        @if (user.AccountStatus == "Active")
                                        {
                                            <button class="btn btn-danger" title="Block"
                                                    onclick="confirmDeactivate('@user.Id', '@user.FullName')">
                                                <i class="fas fa-user-slash"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <form asp-action="UnblockUser" asp-controller="User" method="post" style="display:inline;">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="userId" value="@user.Id" />
                                                <button type="submit" class="btn btn-success" title="Unblock">
                                                    <i class="fas fa-user-check"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <div class="empty-state">
                                    <i class="fas fa-users-slash fa-3x text-muted mb-3"></i>
                                    <h5 class="text-muted">No @userType.ToLower() found</h5>
                                    @if (!string.IsNullOrEmpty(searchTerm))
                                    {
                                        <a asp-action="@ViewContext.RouteData.Values["Action"]" class="btn btn-primary mt-2">
                                            Clear Search
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="row mt-4">
            <div class="col-md-6">
                <p class="text-muted">
                    Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalCount entries
                    @if (!string.IsNullOrEmpty(searchTerm))
                    {
                        <span>(filtered from @Model.Count total)</span>
                    }
                </p>
            </div>
            <div class="col-md-6">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-end mb-0">
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-page="1"
                               asp-route-search="@searchTerm"
                               asp-route-sortOrder="@ViewData["CurrentSort"]">
                                <i class="fas fa-angle-double-left"></i>
                            </a>
                        </li>
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-page="@(Model.PageIndex - 1)"
                               asp-route-search="@searchTerm"
                               asp-route-sortOrder="@ViewData["CurrentSort"]">
                                <i class="fas fa-angle-left"></i>
                            </a>
                        </li>

                        @{
                            int startPage = Math.Max(1, Model.PageIndex - 2);
                            int endPage = Math.Min(Model.TotalPages, Model.PageIndex + 2);

                            if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="@ViewContext.RouteData.Values["Action"]"
                                       asp-route-page="1"
                                       asp-route-search="@searchTerm"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                                        1
                                    </a>
                                </li>
                                if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }

                            for (var i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                    <a class="page-link"
                                       asp-action="@ViewContext.RouteData.Values["Action"]"
                                       asp-route-page="@i"
                                       asp-route-search="@searchTerm"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                                        @i
                                    </a>
                                </li>
                            }

                            if (endPage < Model.TotalPages)
                            {
                                if (endPage < Model.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="@ViewContext.RouteData.Values["Action"]"
                                       asp-route-page="@Model.TotalPages"
                                       asp-route-search="@searchTerm"
                                       asp-route-sortOrder="@ViewData["CurrentSort"]">
                                        @Model.TotalPages
                                    </a>
                                </li>
                            }
                        }

                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-page="@(Model.PageIndex + 1)"
                               asp-route-search="@searchTerm"
                               asp-route-sortOrder="@ViewData["CurrentSort"]">
                                <i class="fas fa-angle-right"></i>
                            </a>
                        </li>
                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="@ViewContext.RouteData.Values["Action"]"
                               asp-route-page="@Model.TotalPages"
                               asp-route-search="@searchTerm"
                               asp-route-sortOrder="@ViewData["CurrentSort"]">
                                <i class="fas fa-angle-double-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<form id="blockForm" asp-action="BlockUser" asp-controller="User" method="post" style="display:none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="UserId" />
    <input type="hidden" name="BlockReason" />
</form>

@section Styles {
    <style>
        .card {
            border: none;
            border-radius: 10px;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
        }

        .hover-effect:hover {
            background-color: #f8f9fa;
            transform: scale(1.005);
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            transition: all 0.2s ease;
        }

        .badge {
            padding: 0.5em 0.8em;
            font-weight: 500;
            letter-spacing: 0.5px;
        }

        .empty-state {
            padding: 2rem;
            text-align: center;
        }

        .btn-group .btn {
            border-radius: 4px;
            margin: 0 2px;
        }

        .form-control:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

        th {
            position: sticky;
            top: 0;
            background-color: #4e73df !important;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .page-item.active .page-link {
            background-color: #4e73df;
            border-color: #4e73df;
        }

        .page-link {
            color: #4e73df;
        }
    </style>
}

@section Scripts {
    <script>
        function confirmDeactivate(userId, userName) {
            Swal.fire({
                title: 'Confirm Blocking',
                html: `Are you sure you want to block <b>${userName}</b>?`,
                icon: 'warning',
                input: 'text',
                inputLabel: 'Reason for blocking',
                inputPlaceholder: 'Enter reason',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You must provide a reason!';
                    }
                },
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, block!',
                backdrop: 'rgba(0,0,0,0.4)'
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.getElementById('blockForm');
                    form.querySelector('input[name="UserId"]').value = userId;
                    form.querySelector('input[name="BlockReason"]').value = result.value;
                    form.submit();
                }
            });
        }
    </script>
}