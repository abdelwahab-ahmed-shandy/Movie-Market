@model DAL.ViewModels.Subscriber.SubscriberListVM
@{
    ViewData["Title"] = "Newsletter Subscribers";
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">@ViewData["Title"]</h6>
        <form asp-action="Index" method="get" class="form-inline">
            <div class="input-group">
                <input type="text" class="form-control" name="query" value="@ViewBag.Query" placeholder="Search subscribers...">
                <div class="input-group-append">
                    <button class="btn btn-outline-primary" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
   
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover" width="100%" cellspacing="0">
                <thead class="thead-light">
                    <tr>
                        <th>Email</th>
                        <th>Subscription Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Subscribers.Any())
                    {
                        foreach (var subscriber in Model.Subscribers)
                        {
                            <tr>
                                <td>@subscriber.Email</td>
                                <td>@subscriber.SubscribedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="mailto:@subscriber.Email" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-envelope"></i> Email
                                        </a>

                                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="@subscriber.Id">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </button>

                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center">No subscribers found</td>
                        </tr>
                    }
                </tbody>
            </table>

            @{
                var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                var prevDisabled = Model.PageIndex <= 1 ? "disabled" : "";
                var nextDisabled = Model.PageIndex >= totalPages ? "disabled" : "";
            }

            <div class="d-flex justify-content-between">
                <div>
                    @{
                        var firstItem = (Model.PageIndex - 1) * Model.PageSize + 1;
                        var lastItem = Math.Min(Model.PageIndex * Model.PageSize, Model.TotalCount);
                    }
                    <p>Showing @firstItem to @lastItem of @Model.TotalCount entries</p>
                </div>
                <div>
                    <a asp-action="Index"
                       asp-route-page="@(Model.PageIndex - 1)"
                       asp-route-query="@Model.SearchTerm"
                       class="btn btn-outline-secondary @prevDisabled">
                        Previous
                    </a>
                    <span class="mx-2">Page @Model.PageIndex of @totalPages</span>
                    <a asp-action="Index"
                       asp-route-page="@(Model.PageIndex + 1)"
                       asp-route-query="@Model.SearchTerm"
                       class="btn btn-outline-secondary @nextDisabled">
                        Next
                    </a>
                </div>
            </div>
        </div>

</div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this subscriber?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <form id="deleteForm" method="post" asp-action="DeleteSubscriber">
                        <input type="hidden" name="id" id="subscriberId" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
        <script>
            $(document).ready(function () {
                $('.delete-btn').on('click', function (e) {
                    e.preventDefault();
                    var subscriberId = $(this).data('id');
                    $('#subscriberId').val(subscriberId);
                    $('#deleteModal').modal('show');
                });
            });
        </script>
}
