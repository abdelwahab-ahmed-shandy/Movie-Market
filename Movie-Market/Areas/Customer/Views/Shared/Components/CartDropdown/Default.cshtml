@model DAL.ViewModels.Cart.CartDropdownVM

<div class="dropdown cart-dropdown">
    <button class="btn btn-outline-light dropdown-toggle position-relative"
            type="button"
            id="cartDropdown"
            data-bs-toggle="dropdown"
            aria-expanded="false"
            aria-label="Shopping Cart">
        <i class="fas fa-shopping-cart fa-lg"></i>
        @if (Model.ItemCount > 0)
        {
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                @Model.ItemCount
                <span class="visually-hidden">items in cart</span>
            </span>
        }
    </button>

    <div class="dropdown-menu dropdown-menu-end shadow-lg" aria-labelledby="cartDropdown">
        <div class="cart-dropdown-content">
            <!-- Tab Navigation -->
            <ul class="nav nav-tabs" id="cartTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="cart-tab" data-bs-toggle="tab" data-bs-target="#cart" type="button" role="tab">
                        Cart (@Model.ItemCount)
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="orders-tab" data-bs-toggle="tab" data-bs-target="#orders" type="button" role="tab">
                        My Orders
                    </button>
                </li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content p-3">
                <!-- Cart Tab -->
                <div class="tab-pane fade show active" id="cart" role="tabpanel">
                    @if (Model.Items.Any())
                    {
                        <div class="cart-items">
                            <div class="list-group list-group-flush">
                                @foreach (var item in Model.Items.Take(3))
                                {
                                    <div class="list-group-item border-0">
                                        <div class="d-flex gap-3 align-items-center">
                                            <div class="flex-shrink-0">
                                                <img src="@Url.Content("~/" + item.ImageUrl)"
                                                     alt="@item.Title"
                                                     class="img-thumbnail"
                                                     style="width: 60px; height: 60px; object-fit: cover;">
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1">@item.Title</h6>
                                                <small class="text-muted">@item.CinemaName</small>
                                                <div class="d-flex justify-content-between align-items-center mt-1">
                                                    <small class="text-muted">@item.Quantity × $@item.Price.ToString("0.00")</small>
                                                    <span class="fw-bold">$@((item.Price * item.Quantity).ToString("0.00"))</span>
                                                </div>
                                            </div>
                                            <form asp-action="RemoveFromCart" method="post" class="remove-item-form">
                                                <input type="hidden" name="cartId" value="@item.Id" />
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            </div>

                            @if (Model.Items.Count > 3)
                            {
                                <div class="px-3 py-2 bg-light text-center">
                                    <small class="text-muted">+ @(Model.Items.Count - 3) more items</small>
                                </div>
                            }

                            <div class="dropdown-divider"></div>

                            <div class="px-3 py-2">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="fw-bold">Subtotal:</span>
                                    <span class="fw-bold fs-5">$@Model.Total.ToString("0.00")</span>
                                </div>

                                <div class="d-grid gap-2">
                                    <a asp-area="Customer"
                                       asp-controller="Cart"
                                       asp-action="ViewCart"
                                       class="btn btn-primary">
                                        <i class="fas fa-shopping-cart me-2"></i> View Full Cart
                                    </a>

                                    <a asp-area="Customer"
                                       asp-controller="Payment"
                                       asp-action="Checkout"
                                       class="btn btn-success">
                                        <i class="fas fa-credit-card me-2"></i> Checkout
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-4">
                            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                            <p class="mb-3">Your cart is empty</p>
                            <a asp-controller="Movie"
                               asp-action="Index"
                               class="btn btn-outline-primary">
                                Browse Movies
                            </a>
                        </div>
                    }
                </div>

                <!-- Orders Tab -->
                <div class="tab-pane fade" id="orders" role="tabpanel">
                    <div id="orders-container">
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2">Loading your orders...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cart-dropdown {
        position: relative;
    }

        .cart-dropdown .dropdown-menu {
            width: 400px;
            padding: 0;
            border: none;
            margin-top: 10px;
        }

    .cart-dropdown-content {
        max-height: 500px;
        overflow-y: auto;
    }

    .nav-tabs {
        padding: 0.5rem 1rem 0;
    }

        .nav-tabs .nav-link {
            border: none;
            color: #6c757d;
            font-weight: 500;
        }

            .nav-tabs .nav-link.active {
                color: #0d6efd;
                background: transparent;
                border-bottom: 2px solid #0d6efd;
            }

    .cart-items .list-group-item {
        padding: 1rem;
        transition: background-color 0.2s;
    }

        .cart-items .list-group-item:hover {
            background-color: #f8f9fa;
        }

    .remove-item-form {
        opacity: 0;
        transition: opacity 0.2s;
    }

    .list-group-item:hover .remove-item-form {
        opacity: 1;
    }

    .img-thumbnail {
        border-radius: 4px;
    }

    .order-item {
        border-left: 3px solid #0d6efd;
        padding-left: 10px;
        margin-bottom: 10px;
    }

    .order-status {
        font-size: 0.8rem;
        padding: 0.2rem 0.5rem;
        border-radius: 0.25rem;
    }

    .status-completed {
        background-color: #d1e7dd;
        color: #0f5132;
    }

    .status-pending {
        background-color: #fff3cd;
        color: #664d03;
    }

    .status-canceled {
        background-color: #f8d7da;
        color: #842029;
    }

    @@media (max-width: 576px) {
        .cart-dropdown .dropdown-menu {
            width: 300px;
            right: -50px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize tab functionality
        const ordersTab = document.getElementById('orders-tab');
        if (ordersTab) {
            ordersTab.addEventListener('shown.bs.tab', function() {
                loadOrders();
            });
        }

        // Confirm before removing item
        document.querySelectorAll('.remove-item-form').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Are you sure you want to remove this item from your cart?')) {
                    e.preventDefault();
                }
            });
        });

        // Update cart count
        updateCartCount();
    });

    function updateCartCount() {
        fetch('@Url.Action("GetCartCount", "Cart")')
            .then(response => response.json())
            .then(data => {
                const badge = document.querySelector('.cart-dropdown .badge');
                if (data.count > 0) {
                    badge.textContent = data.count;
                    badge.style.display = 'block';
                    // Update the tab label too
                    const cartTab = document.getElementById('cart-tab');
                    if (cartTab) {
                        cartTab.textContent = `Cart (${data.count})`;
                    }
                } else {
                    badge.style.display = 'none';
                    const cartTab = document.getElementById('cart-tab');
                    if (cartTab) {
                        cartTab.textContent = 'Cart (0)';
                    }
                }
            });
    }

    function loadOrders() {
        const container = document.getElementById('orders-container');
        if (!container) return;

        fetch('@Url.Action("GetRecentOrders", "Order")')
            .then(response => response.text())
            .then(html => {
                container.innerHTML = html;
            })
            .catch(error => {
                container.innerHTML = `
                    <div class="alert alert-danger">
                        Failed to load orders. Please try again later.
                    </div>
                `;
            });
    }
</script>